.input.svelte-12mkqqf{flex-wrap:wrap;display:-webkit-box;display:flex}.input.svelte-12mkqqf>.input-label.svelte-12mkqqf{-webkit-box-ordinal-group:1;order:0}.input.svelte-12mkqqf>.input-content.svelte-12mkqqf{-webkit-box-ordinal-group:2;order:1}.input-content.svelte-12mkqqf,.input-label.svelte-12mkqqf{display:block;width:100%}.input-label.focused.svelte-12mkqqf{color:#34495e}.input-label.svelte-12mkqqf{margin-bottom:.3rem;-webkit-transition:all .2s;transition:all .2s;color:#00b16a;font-weight:600}input.svelte-1xoltp8{-webkit-transition:all .2s;transition:all .2s;background:transparent;display:block;width:100%;border:0;border-bottom:1px solid #00b16a;outline:none;font-size:1rem;padding:0 .3rem .3rem 0}.input-content.focused.svelte-1xoltp8>input.svelte-1xoltp8{border-color:#34495e}@-webkit-keyframes svelte-1oke8fd-rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(1turn)}}@keyframes svelte-1oke8fd-rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(1turn)}}.loading.svelte-1oke8fd{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.loading.svelte-1oke8fd>.icon-loading.svelte-1oke8fd{font-size:1rem;-webkit-animation-name:svelte-1oke8fd-rotation;animation-name:svelte-1oke8fd-rotation;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear}button.svelte-1oke8fd:disabled{color:#000;background-color:#14e38f}button.svelte-1oke8fd{font-size:.8rem;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;-webkit-transition:all .2s;transition:all .2s;color:#fff;background-color:#00b16a;padding:.5rem;border:0;margin:0;display:block;outline:0;width:100%;font-weight:600;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}button.style-2.svelte-1oke8fd{color:#fff;background-color:#34495e}@media(hover:hover){button.style-2.svelte-1oke8fd:not(:disabled):hover{color:#fff;background-color:#507294}button.svelte-1oke8fd:not(:disabled):hover{color:#fff;background-color:#34495e}}button.pressed.svelte-1oke8fd{box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#009458;color:#fff}button.svelte-1oke8fd:active{box-shadow:none;color:#fff;background-color:#009458}.button.svelte-1oke8fd{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%;display:block}.container.svelte-1vqgb5b{max-width:90%;width:400px;margin:auto}.container.svelte-1vqgb5b .content.svelte-1vqgb5b{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);background:#fff;padding:1rem}.container.svelte-1vqgb5b header.svelte-1vqgb5b{margin-bottom:.5rem}.container.svelte-1vqgb5b header h2.svelte-1vqgb5b{font-size:1.3rem}body,html{height:100%}@media (max-width:768px){body,html{font-size:22px}}body{display:-webkit-box;display:flex}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0;background-color:#f8f5f5;color:#616161}form.svelte-qaxlib{display:grid;grid-row-gap:1rem}
/*# sourceMappingURL=data:application/json;base64, */